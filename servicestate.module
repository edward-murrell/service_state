<?php
/**
 * @file
 * Module file for servicestate module, which queries and displays the
 * status of upstream services.
 */

/**
 * Implements hook_menu().
 */
function servicestate_menu() {
  $items = array();

  $items['servicestate'] = array(
    'title'  => 'Service state',
    'page callback'     => 'servicestate_view_page',
    'access callback'   => TRUE,
    #'access arguments'  => array('view service state page'),
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'servicestate.page.inc', // temporary
  );
  $items['servicestate/ajax/%'] = array(
    'title'  => 'Service state',
    'page callback'     => 'servicestate_view_page',
    'access callback'   => TRUE,
    #'access arguments'  => array('view service state page'),
    'type'              => MENU_CALLBACK,
    'file'              => 'servicestate.ajax.inc', // temporary
  );

  return $items;
}

/*
 * This is a set of dummy content used to test the display page and
 * callback filters. It will eventually be deleted.
 */
function servicestate_dummy_services() {
  $services = array();

  $services['memcache'] = array(
    'title'         => t('Memcache'),
    'description'   => t('Checks the memcache daemon is up.'),
    'callback'      => 'servicestate_dummy_check',
    'arguments'     => array('error'),
    'group'         => '',
    'weight'        => 0,
    'enabled'       => TRUE,
  );

  $services['smsos'] = array(
    'title'         => t('SMS OS'),
    'description'   => t('Checks the SMSOS service is active..'),
    'callback'      => 'servicestate_dummy_check',
    'arguments'     => array('ok'),
    'group'         => '',
    'weight'        => 0,
    'enabled'       => TRUE,
  );

  return $services;
}

/*
 * This is a set of dummy check used to test the display page and
 * callback filters. It will eventually be deleted.
 */
function servicestate_dummy_check() {
  $args  = func_get_args();
  $nargs = func_num_args();
  if ($nargs > 0) {
    $state = array_pop($args);
  } else {
    $state = 'ok';
  }
  $result = array(
    'status' => strtoupper($state),
  );

  if ($result['status'] == 'OK') {
    $result['message'] = 'Service returns as expected';
  } else {
    $result['error']   = 'Service suffered an unknown error';
  }
}

/*
 * Implementation of hook_theme().
 */
function servicestate_theme($existing, $type, $theme, $path) {
  return array(
    'servicestate_view_table' => array(
      'template' => 'servicestate-view-table',
      'render element' => 'element',
      'variables' => array(
        'elements' => array(),
      ),
      'file' => 'servicestate.theme.inc',
      #'pattern' =>
    ),
    'servicestate_view_item' => array(
      'template' => 'servicestate-view-item',
      'render element' => 'data',
      'variables' => array(
        'title' => NULL,
        'state' => NULL,
      ),
      'file' => 'servicestate.theme.inc',
    )
  );
}
